
import { Con, Row, Col } from 'bee-layout';
import { Panel } from 'bee-panel';
import Button from 'bee-button';
import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import PageLayout from '../src';


const CARET = <i className="uf uf-arrow-down"></i>;

const CARETUP = <i className="uf uf-arrow-up"></i>;


var Demo1 = require("./demolist/Demo1");var Demo2 = require("./demolist/Demo2");var Demo3 = require("./demolist/Demo3");var Demo4 = require("./demolist/Demo4");var Demo5 = require("./demolist/Demo5");var Demo6 = require("./demolist/Demo6");var Demo7 = require("./demolist/Demo7");var Demo8 = require("./demolist/Demo8");var DemoArray = [{"example":<Demo1 />,"title":" Navbar和Menus的组合","code":"/**\n * @title Navbar和Menus的组合\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\n *\n */\n\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Badge, FormControl, Menu } from 'tinper-bee';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\nconsole.log(SideContainer);\n\nclass Demo1 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            expanded: false,\n            current: 1\n        }\n    }\n\n    onToggle(value) {\n        this.setState({expanded: value});\n    }\n\n    handleClick(e) {\n        console.log('click ', e);\n        this.setState({\n            current: e.key\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"demo1\">\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\n                    <MenuToggle show/>\n                    <Header>\n                        <Brand>\n                            <a href=\"#\"><img style={{width:140}} src=\"http://design.yyuap.com/logos/logox.png\"/></a>\n                        </Brand>\n                    </Header>\n\n                        <Nav pullRight>\n                            <NavItem eventKey={1}><FormControl type=\"search\" placeholder=\"Search\"/></NavItem>\n                            <NavItem eventKey={2}><Badge dataBadge=\"4\" colors=\"warning\"><Icon\n                                type=\"uf-bell\"></Icon></Badge></NavItem>\n                        <NavItem eventKey={3}><Icon type=\"uf-bubble-o\"></Icon></NavItem>\n                        <Menu mode=\"horizontal\" className=\"dropdown\">\n                            <SubMenu title={<span>刘认华<Icon type=\"uf-triangle-down\"></Icon></span>}>\n                                <Menu.Item key=\"setting:1\">选项 1</Menu.Item>\n                                <Menu.Item key=\"setting:2\">选项 2</Menu.Item>\n                                <Menu.Item key=\"setting:3\">选项 3</Menu.Item>\n                                <Menu.Item key=\"setting:4\">选项 4</Menu.Item>\n                            </SubMenu>\n                        </Menu>\n                    </Nav>\n                </Navbar>\n                <SideContainer onToggle={this.onToggle.bind(this)} expanded={this.state.expanded}>\n                    <Menu onClick={this.handleClick.bind(this)}\n                          style={{ width: 240 }}\n                          defaultOpenKeys={['demo3sub1']}\n                          selectedKeys={[this.state.current]}\n                          mode=\"inline\"\n                        >\n                        <SubMenu key=\"demo3sub1\" title={<span><span>组织 1</span></span>}>\n                            <MenuItemGroup title=\"组 1\">\n                                <Menu.Item key=\"1\">选项 1</Menu.Item>\n                                <Menu.Item key=\"2\">选项 2</Menu.Item>\n                            </MenuItemGroup>\n                            <MenuItemGroup title=\"组 2\">\n                                <Menu.Item key=\"3\">选项 3</Menu.Item>\n                                <Menu.Item key=\"4\">选项 4</Menu.Item>\n                            </MenuItemGroup>\n                        </SubMenu>\n                        <SubMenu key=\"demo3sub2\" title={<span><span>组织 2</span></span>}>\n                            <Menu.Item key=\"5\">选项 5</Menu.Item>\n                            <Menu.Item key=\"6\">选项 6</Menu.Item>\n                            <SubMenu key=\"demo3sub3\" title=\"子项\">\n                                <Menu.Item key=\"7\">选项 7</Menu.Item>\n                                <Menu.Item key=\"8\">选项 8</Menu.Item>\n                            </SubMenu>\n                        </SubMenu>\n                        <SubMenu key=\"demo3sub4\" title={<span><span>组织 3</span></span>}>\n                            <Menu.Item key=\"9\">选项 9</Menu.Item>\n                            <Menu.Item key=\"10\">选项 10</Menu.Item>\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\n                        </SubMenu>\n                    </Menu>\n                </SideContainer>\n            </div>\n        )\n    }\n}\n\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。"},{"example":<Demo2 />,"title":" ","code":"/**\n * @title \n * @description \n *\n */\n\nimport React, { Component } from 'react';\nimport { Breadcrumb, Navbar, Icon, Badge, FormControl, Menu } from 'tinper-bee';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\n\nclass Demo2 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            selectedkey: 1,\n            expanded: false,\n            currentArray: [],\n            openKeys: []\n        }\n        this.myfilter = this.myfilter.bind(this);\n    }\n\n    handleSelect(index) {\n        this.setState({selectedkey: index});\n    } \n\n    onToggle(value) {\n        this.setState({expanded: value});\n    }\n\n    handleClick(e) {\n        console.log('Clicked: ', e.key);\n        this.setState({current: e.key});\n    }\n    onOpenChange(openKeys) {\n        const state = this.state;\n        const latestOpenKey = this.myfilter(openKeys,state.openKeys);\n        const latestCloseKey = this.myfilter(state.openKeys,openKeys);\n\n         /*   const latestOpenKey = openKeys.find(key => !(state.openKeys.indexOf(key) > -1));\n            const latestCloseKey = state.openKeys.find(key => !(openKeys.indexOf(key) > -1));*/\n\n        let nextOpenKeys = [];\n        if (latestOpenKey) {\n            nextOpenKeys = this.getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n        }\n        if (latestCloseKey) {\n            this.state.currentArray.push(latestCloseKey);\n            nextOpenKeys = this.getAncestorKeys(latestCloseKey);\n        }\n        this.setState({openKeys: nextOpenKeys});\n    }\n    //IE下 array.find（）方法不可用\n    myfilter(arr1,arr2) {\n        if(arr2.length == 0 || !arr2) {\n            return arr1[0];\n        }\n\n        for(var i=0;i<arr1.length;i++)\n        {\n          if(arr2.indexOf(arr1[i].toString())==-1)\n          {\n                return arr1[i];\n          }      \n        }\n        return false;\n    }\n    getAncestorKeys(key) {\n\n        const map = {\n            \"子项\": ['组织2'],\n        };\n\n        return map[key] || [];\n    }\n\n    renderBreadcrumb = () => {\n        let currentArray = this.state.currentArray;\n        let BreadcrumbDom = [];\n        this.state.openKeys.map(function(item) {\n            BreadcrumbDom.push(<Breadcrumb.Item>{item}</Breadcrumb.Item>)\n        })\n        BreadcrumbDom.push(<Breadcrumb.Item active>{this.state.current}</Breadcrumb.Item>)\n        return <Breadcrumb>{BreadcrumbDom}</Breadcrumb>;\n                            \n    }\n\n    render() {\n        return (\n            <div id=\"demo2\">\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\n                    <Header>\n                        <Brand>\n                            <a href=\"#\">\n                                <span className=\"logo-placeholder\">logo</span>\n                            </a>\n                        </Brand>\n                    </Header>\n\n                    <Nav selectedkey={this.state.selectedkey} onSelect={this.handleSelect.bind(this)}>\n                        <NavItem eventKey={1}>一级导航</NavItem>\n                        <NavItem eventKey={2}>一级导航</NavItem>\n                        <NavItem eventKey={3}>一级导航</NavItem>\n                        \n                    </Nav>\n                    <Nav pullRight>\n                        \n                        <NavItem eventKey={3} className=\"icon-nav\">\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\n                            <a className=\"\" href=\"#\"> \n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\n                                刘认华 \n                            </a>\n                        </NavItem>\n                        \n                    </Nav>\n                </Navbar>\n                <div className=\"inner-container\">\n                    <Menu mode=\"inline\" className=\"wrapper-menu\" openKeys={this.state.openKeys} selectedKeys={[this.state.current]} className=\"inner-menu\" style={{ width: 240 }} onOpenChange={this.onOpenChange.bind(this)} style={{ width: 240 }}  onClick={this.handleClick.bind(this)}>\n                        <SubMenu key=\"组织1\" title={<span><span>组织 1</span></span>}>\n                            <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\n                            <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\n                            <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\n                            <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"组织2\" title={<span><span>组织 2</span></span>}>\n                            <Menu.Item key=\"选项 5\">选项 5</Menu.Item>\n                            <Menu.Item key=\"选项 6\">选项 6</Menu.Item>\n                            <SubMenu key=\"子项\" title=\"子项\">\n                                <Menu.Item key=\"选项 7\">选项 7</Menu.Item>\n                                <Menu.Item key=\"选项 8\">选项 8</Menu.Item>\n                            </SubMenu>\n                        </SubMenu>\n                        <SubMenu key=\"组织3\" title={<span><span>组织 3</span></span>}>\n                            <Menu.Item key=\"选项 9\">选项 9</Menu.Item>\n                            <Menu.Item key=\"选项 10\">选项 10</Menu.Item>\n                            <Menu.Item key=\"选项 11\">选项 11</Menu.Item>\n                            <Menu.Item key=\"选项 12\">选项 12</Menu.Item>\n                        </SubMenu>\n                    </Menu>\n                    <div className=\"inner-content\">\n                        {\n                            this.state.current && <Breadcrumb>{this.renderBreadcrumb()}</Breadcrumb>\n                        }\n                        \n                    </div>\n                </div>\n                <footer>@2017 用友网络UED Team</footer>\n            </div>\n        )\n    }\n}\n\n","desc":" "},{"example":<Demo3 />,"title":" ","code":"/**\n * @title \n * @description \n *\n */\n\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Badge, FormControl, Menu } from 'tinper-bee';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\n\nclass Demo3 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            selectedkey: 1,\n            expanded: false,\n        }\n    }\n\n    handleSelect(index) {\n        this.setState({selectedkey: index});\n    } \n\n    onToggle(value) {\n        this.setState({expanded: value});\n    }\n\n\n    render() {\n        return (\n            <div id=\"demo3\">\n                <div className=\"header-top\">\n                    <a href=\"#\">登陆</a>\n                    <a className=\"part_1\" href=\"#\">注册</a>\n                    <span>|</span>\n                    <a className=\"part_2\" href=\"#\">通知</a>\n                    <a href=\"#\">二维码</a>\n                </div>\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\n                    <Header>\n                        <Brand>\n                            <a href=\"#\">\n                                <span className=\"logo-placeholder\">logo</span>\n                            </a>\n                        </Brand>\n                    </Header>\n\n                    <Nav selectedkey={this.state.selectedkey} onSelect={this.handleSelect.bind(this)}>\n                        <NavItem eventKey={1}>一级导航</NavItem>\n                        <NavItem eventKey={2}>一级导航</NavItem>\n                        <NavItem eventKey={3}>一级导航</NavItem>\n                        \n                    </Nav>\n                    <Nav pullRight>\n                        \n                        <NavItem eventKey={3} className=\"icon-nav\">\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\n                            <a className=\"\" href=\"#\"> \n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\n                                刘认华 \n                            </a>\n                        </NavItem>\n                        \n                    </Nav>\n                </Navbar>\n                <div className=\"inner-container\"></div>\n            </div>\n        )\n    }\n}\n\n","desc":" "},{"example":<Demo4 />,"title":"Demo4","code":"\n\nimport React, { Component } from 'react';\nimport { Dropdown, Navbar, Icon, Badge, FormControl } from 'tinper-bee';\nimport ReactDOM from \"react-dom\";\nimport Menu,{ Item as MenuItem, Divider, SubMenu, MenuItemGroup }  from 'bee-menus';\n\n\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\n\nclass Demo4 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            selectedkey: 1,\n            expanded: false,\n            current: 'mail',\n            dropdownVisible:false\n        }\n    }\n\n    componentDidMount() {\n        let navwidth = document.getElementById(\"demo4\");\n        this.setState({navwidth:navwidth+\"px\"})\n    }\n\n    handleSelect(index) {\n        this.setState({selectedkey: index});\n    } \n\n    onToggle(value) {\n        this.setState({expanded: value});\n    }\n\n    handleClick(e) {\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    onSelectMenu = (key) => {\n       console.log(`${key} selected`);\n\n     }\n\n    onVisibleChange = (visible) => {\n       this.setState({dropdownVisible:visible});\n    }\n    onClick = (e) => {\n      this.setState({dropdownVisible:true});\n       console.log(\"onClick\"+e);\n    }\n\n\n    render() {\n        const menu1 = (\n          <Menu className=\"horizontal-submenu\"\n            onClick={this.onClick}\n            onSelect={this.onSelectMenu}>\n            <MenuItem key=\"1\">借款合同</MenuItem>\n            <MenuItem key=\"2\">抵/质押合同</MenuItem>\n            <MenuItem key=\"3\">担保合同</MenuItem>\n            <MenuItem key=\"4\">联保合同</MenuItem>\n            <MenuItem key=\"5\">合同审批</MenuItem>\n            <MenuItem key=\"6\">抵/质押合同跟踪</MenuItem>\n          </Menu>\n        );\n        return (\n            <div id=\"demo4\">\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\n                    <Header>\n                        <Brand>\n                            <a href=\"#\">\n                                <span className=\"logo-placeholder\">logo</span>\n                            </a>\n                        </Brand>\n                    </Header>\n                    <Nav selectedkey={this.state.selectedkey} onSelect={this.handleSelect.bind(this)}>\n                        <NavItem eventKey={1}>组织 1</NavItem>\n                        <NavItem eventKey={2}>组织 2</NavItem>\n                        <NavItem eventKey={3}>\n                            <Dropdown\n                                ref=\"dropdown\"\n                                overlayClassName=\"dropdown-menu\"\n                                style={{width:this.state.navwidth}}\n                                trigger={['click']}\n                                visible = {this.state.dropdownVisible}\n                                overlay={menu1}\n                                animation=\"slide-up\"\n                                onVisibleChange={this.onVisibleChange}>\n                                <span   >点击显示</span>\n                            </Dropdown>\n                        </NavItem>\n                        \n                    </Nav>\n                    \n                    <Nav pullRight>\n                        \n                        <NavItem eventKey={3} className=\"icon-nav\">\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\n                            <a className=\"\" href=\"#\"> \n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\n                                刘认华 \n                            </a>\n                        </NavItem>\n                        \n                    </Nav>\n                </Navbar>\n                <div className=\"inner-container\"></div>\n            </div>\n        )\n    }\n}\n\n","desc":""},{"example":<Demo5 />,"title":" Demo5","code":"/**\n * @title Demo5\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\n *\n */\n\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Breadcrumb, Badge, FormControl, Menu } from 'tinper-bee';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\nconsole.log(SideContainer);\n\nclass Demo5 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            selectedkey: 1,\n            expanded: false,\n            currentArray: [],\n            openKeys: []\n        }\n        this.myfilter = this.myfilter.bind(this);\n    }\n\n    handleSelect(index) {\n        this.setState({selectedkey: index});\n    } \n\n    onToggle(value) {\n        this.setState({expanded: value});\n    }\n\n    handleClick(e) {\n        console.log('Clicked: ', e.key);\n        this.setState({current: e.key});\n    }\n    onOpenChange(openKeys) {\n        const state = this.state;\n        const latestOpenKey = this.myfilter(openKeys,state.openKeys);\n        const latestCloseKey = this.myfilter(state.openKeys,openKeys);\n\n         /*   const latestOpenKey = openKeys.find(key => !(state.openKeys.indexOf(key) > -1));\n            const latestCloseKey = state.openKeys.find(key => !(openKeys.indexOf(key) > -1));*/\n\n        let nextOpenKeys = [];\n        if (latestOpenKey) {\n            nextOpenKeys = this.getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n        }\n        if (latestCloseKey) {\n            this.state.currentArray.push(latestCloseKey);\n            nextOpenKeys = this.getAncestorKeys(latestCloseKey);\n        }\n        this.setState({openKeys: nextOpenKeys});\n    }\n    //IE下 array.find（）方法不可用\n    myfilter(arr1,arr2) {\n        if(arr2.length == 0 || !arr2) {\n            return arr1[0];\n        }\n\n        for(var i=0;i<arr1.length;i++)\n        {\n          if(arr2.indexOf(arr1[i].toString())==-1)\n          {\n                return arr1[i];\n          }      \n        }\n        return false;\n    }\n    getAncestorKeys(key) {\n\n        const map = {\n            \"子项\": ['组织2'],\n        };\n\n        return map[key] || [];\n    }\n\n    renderBreadcrumb = () => {\n        let currentArray = this.state.currentArray;\n        let BreadcrumbDom = [];\n        this.state.openKeys.map(function(item,index) {\n            BreadcrumbDom.push(<Breadcrumb.Item key={index}>{item}</Breadcrumb.Item>)\n        })\n        BreadcrumbDom.push(<Breadcrumb.Item active>{this.state.current}</Breadcrumb.Item>)\n        return <Breadcrumb>{BreadcrumbDom}</Breadcrumb>;\n                            \n    }\n\n    render() {\n        return (\n            <div id=\"demo5\">\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle}>\n                    <Nav pullRight>\n                        <NavItem eventKey={3} className=\"icon-nav\">\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\n                            <a className=\"\" href=\"#\"> \n                                <img alt=\"@ahua52\" className=\"float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\n                                刘认华 \n                            </a>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n                <div className=\"content\">\n                    <div className=\"sider-menu\">\n                        <div className=\"logo-header\">\n                            <a href=\"#\">\n                                <span className=\"logo-placeholder\">logo</span>\n                            </a>\n                        </div>\n                        <Menu mode=\"inline\" className=\"wrapper-menu\" openKeys={this.state.openKeys} selectedKeys={[this.state.current]} style={{ width: 240 }} onOpenChange={this.onOpenChange.bind(this)} style={{ width: 240 }}  onClick={this.handleClick.bind(this)}>\n                            <SubMenu key=\"组织1\" title={<span><span>组织 1</span></span>}>\n                                <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\n                                <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\n                                <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\n                                <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\n                            </SubMenu>\n                            <SubMenu key=\"组织2\" title={<span><span>组织 2</span></span>}>\n                                <Menu.Item key=\"选项 5\">选项 5</Menu.Item>\n                                <Menu.Item key=\"选项 6\">选项 6</Menu.Item>\n                                <SubMenu key=\"子项\" title=\"子项\">\n                                    <Menu.Item key=\"选项 7\">选项 7</Menu.Item>\n                                    <Menu.Item key=\"选项 8\">选项 8</Menu.Item>\n                                </SubMenu>\n                            </SubMenu>\n                            <SubMenu key=\"组织3\" title={<span><span>组织 3</span></span>}>\n                                <Menu.Item key=\"选项 9\">选项 9</Menu.Item>\n                                <Menu.Item key=\"选项 10\">选项 10</Menu.Item>\n                                <Menu.Item key=\"选项 11\">选项 11</Menu.Item>\n                                <Menu.Item key=\"选项 12\">选项 12</Menu.Item>\n                            </SubMenu>\n                        </Menu>\n                    </div>\n                    <div className=\"inner-container\">\n                        {this.state.current && <Breadcrumb>{this.renderBreadcrumb()}</Breadcrumb>}\n                        <div className=\"inner-content\"></div>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。"},{"example":<Demo6 />,"title":" Navbar和Menus的组合","code":"/**\n * @title Navbar和Menus的组合\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\n *\n */\n\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Badge, FormControl, Menu } from 'tinper-bee';\nimport classnames from 'classnames';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\nconsole.log(SideContainer);\n\nclass Demo6 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            expanded: false,\n            current: \"选项 1\"\n        }\n    }\n\n    onToggle = (value) => {\n        this.setState({expanded: !this.state.expanded});\n    }\n\n    handleClick = (e) => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key\n        });\n    }\n\n    handleMenuClick(e) {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"demo6\">\n                <Navbar fluid expanded={this.state.expanded} >\n                   <div className=\"toggle-show\" onClick={this.onToggle}>\n                        <Icon type=\"uf-align-justify\" />\n                   </div>\n                   <Nav pullRight>\n                        <NavItem eventKey={3} className=\"icon-nav\">\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\n                            <a className=\"\" href=\"#\"> \n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\n                                刘认华 \n                            </a>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n                <SideContainer expanded={this.state.expanded}>\n                    <Menu onClick={this.handleClick.bind(this)} style={{ width: 70 }} mode=\"vertical\">\n                        <SubMenu key=\"sub1\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\n                            <Menu.Item key=\"1\">选项 1</Menu.Item>\n                            <Menu.Item key=\"2\">选项 2</Menu.Item>\n                            <Menu.Item key=\"3\">选项 3</Menu.Item>\n                            <Menu.Item key=\"4\">选项 4</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub2\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\n                            <Menu.Item key=\"5\">选项 5</Menu.Item>\n                            <Menu.Item key=\"6\">选项 6</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub4\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\n                            <Menu.Item key=\"9\">选项 9</Menu.Item>\n                            <Menu.Item key=\"10\">选项 10</Menu.Item>\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\n                        </SubMenu>\n                    </Menu>\n                </SideContainer>\n                <div className={this.state.expanded?\"inner-container expanded\":\"inner-container\"}>\n                    <div className=\"inner-content\">\n                        <Menu mode=\"inline\" className=\"wrapper-menu\" onClick={this.handleClick} openKeys={this.state.openKeys} selectedKeys={[this.state.current]} className=\"inner-menu\" style={{ width: 240 }}>\n                            <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\n                            <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\n                            <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\n                            <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\n                            \n                        </Menu>\n                    </div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。"},{"example":<Demo7 />,"title":" Navbar和Menus的组合","code":"/**\n * @title Navbar和Menus的组合\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\n *\n */\n\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Badge, FormControl, Menu } from 'tinper-bee';\nimport classnames from 'classnames';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\n\nclass Demo7 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            expanded: false,\n            current: \"选项 1\"\n        }\n    }\n\n    onToggle = (value) => {\n        this.setState({expanded: !this.state.expanded});\n    }\n\n    handleClick = (e) => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key\n        });\n    }\n\n    handleMenuClick(e) {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"demo7\">\n                <Navbar fluid expanded={this.state.expanded} >\n                   <div className=\"toggle-show\" onClick={this.onToggle}>\n                        <Icon type=\"uf-align-justify\" />\n                   </div>\n                   <Nav pullRight>\n                        <NavItem eventKey={3} className=\"icon-nav\">\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\n                            <a className=\"\" href=\"#\"> \n                                <img alt=\"@ahua52\" className=\"float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\n                                刘认华 \n                            </a>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n                <SideContainer expanded={this.state.expanded}>\n                    <Menu className=\"sub-inline\" onClick={this.handleClick.bind(this)} style={{ width: 70 }} mode=\"vertical\">\n                        <SubMenu  key=\"sub1\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\n                            <Menu.Item key=\"1\">选项 1</Menu.Item>\n                            <Menu.Item key=\"2\">选项 2</Menu.Item>\n                            <Menu.Item key=\"3\">选项 3</Menu.Item>\n                            <Menu.Item key=\"4\">选项 4</Menu.Item>\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\n                            <Menu.Item key=\"13\">选项 13</Menu.Item>\n                            <Menu.Item key=\"14\">选项 14</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub2\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\n                            <Menu.Item key=\"5\">选项 5</Menu.Item>\n                            <Menu.Item key=\"6\">选项 6</Menu.Item>\n                            <Menu.Item key=\"15\">选项 15</Menu.Item>\n                            <Menu.Item key=\"16\">选项 16</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub4\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\n                            <Menu.Item key=\"9\">选项 9</Menu.Item>\n                            <Menu.Item key=\"19\">选项 19</Menu.Item>\n                            <Menu.Item key=\"10\">选项 10</Menu.Item>\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\n                        </SubMenu>\n                    </Menu>\n                </SideContainer>\n                <div className={this.state.expanded?\"inner-container expanded\":\"inner-container\"}>\n                    <div className=\"inner-content\">\n                        <Menu mode=\"inline\" className=\"wrapper-menu\" onClick={this.handleClick} openKeys={this.state.openKeys} selectedKeys={[this.state.current]} className=\"inner-menu\" style={{ width: 240 }}>\n                            <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\n                            <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\n                            <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\n                            <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\n                            \n                        </Menu>\n                    </div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。"},{"example":<Demo8 />,"title":" Navbar和Menus的组合","code":"/**\n * @title Navbar和Menus的组合\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\n *\n */\n\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Badge, FormControl, Menu } from 'tinper-bee';\nimport classnames from 'classnames';\nimport Tabs, { TabPane } from 'bee-tabs';\n\n\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst MenuToggle = Menu.MenuToggle;\nconst SideContainer = Menu.SideContainer;\n\nconst NavItem = Navbar.NavItem;\nconst Header = Navbar.Header;\nconst Brand = Navbar.Brand;\nconst Nav = Navbar.Nav;\n\n\nclass Demo8 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            expanded: false,\n            current: \"选项 1\",\n            panelActiveKey: \"1\",\n            tabPaneList:{1:\"fdaf\",3:\"fdsafds\",55:\"fdsafdsa\"}\n        }\n    }\n\n    onToggle = (value) => {\n        this.setState({expanded: !this.state.expanded});\n    }\n\n    handleClick = (e) => {\n        let map = {\n            \"选项 1\": \"选项 1\",\n            \"选项 2\": \"选项 2\",\n            \"选项 3\": \"选项 3\",\n            \"选项 4\": \"选项 4\"\n        }\n        let tabPaneList = this.state.tabPaneList;\n\n        if(!tabPaneList[e.key]) {\n            tabPaneList[e.key] = map[e.key];\n        }\n        \n        this.setState({\n            current: e.key,\n            tabPaneList:tabPaneList\n        });\n    }\n\n    handleMenuClick(e) {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    changePanelKey = (panelActiveKey) => {\n        this.setState({panelActiveKey: panelActiveKey});\n    }\n\n    closeTab = (index) => {\n        let self = this;\n        return function () {\n            let tabPaneList = self.state.tabPaneList;\n\n            delete tabPaneList[index];\n            let tempKey;\n            if(self.state.panelActiveKey==index && String(tabPaneList) !== '{}') {\n                for(var i in tabPaneList) {\n                    tempKey = i;\n                    break;\n                }\n            }\n\n            if(tempKey) {\n                self.setState({tabPaneList:tabPaneList,panelActiveKey:tempKey})\n            }else {\n                self.setState({tabPaneList:tabPaneList})\n            }\n            \n        }\n    }\n\n    renderNavTabPane = () => {\n        let domArray = [];\n        let tabPaneList = this.state.tabPaneList;\n        console.log(tabPaneList);\n        let self = this;\n        for(var i in tabPaneList) {\n            domArray.push(\n                <TabPane key={i} tab={<span className=\"title-wrapper\"><span>{tabPaneList[i]}</span><Icon type=\"uf-close-bold\" onClick={self.closeTab(i)}/></span>}>\n                </TabPane>\n            )\n        }\n\n        return domArray;\n    }\n\n    renderTabPane = () => {\n        let domArray = [];\n        let tabPaneList = this.state.tabPaneList;\n        for(var i in tabPaneList) {\n            domArray.push(\n                <TabPane key={i} tab={<span className=\"title-wrapper\"><span>{tabPaneList[i]}</span><Icon type=\"uf-close-bold\" /></span>}>\n                    key {i} {tabPaneList[i]}\n                </TabPane>\n            )\n        }\n\n        return domArray;\n    }\n\n    render() {\n        return (\n            <div id=\"demo8\">\n                <Navbar fluid expanded={this.state.expanded} >\n                   <div className=\"toggle-show\" onClick={this.onToggle}>\n                        <Icon type=\"uf-align-justify\" />\n                   </div>\n                    <Nav className=\"u-navbar-nav-tab\">\n                        <Tabs\n                          activeKey={this.state.panelActiveKey}\n                          onChange={this.changePanelKey}\n                          destroyInactiveTabPane\n                          tabBarStyle=\"trapezoid\"\n                        >\n                         {this.renderNavTabPane()}\n                          \n                        </Tabs>\n                    </Nav>\n                   <Nav pullRight>\n                        \n                        <NavItem eventKey={3} className=\"icon-nav\">\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\n                            <a className=\"\" href=\"#\"> \n                                <img alt=\"@ahua52\" className=\"float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\n                                刘认华 \n                            </a>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n                <SideContainer expanded={this.state.expanded}>\n                    <Menu mode=\"inline\" onClick={this.handleClick} openKeys={this.state.openKeys} selectedKeys={[this.state.current]} className=\"inner-menu\">\n                        <Menu.Item key=\"选项 1\">选项</Menu.Item>\n                        <Menu.Item key=\"选项 2\">选项</Menu.Item>\n                        <Menu.Item key=\"选项 3\">选项</Menu.Item>\n                        <Menu.Item key=\"选项 4\">选项</Menu.Item>\n                    </Menu>\n\n                </SideContainer>\n                <div className={this.state.expanded?\"inner-container expanded\":\"inner-container\"}>\n                    <Tabs\n                      activeKey={this.state.panelActiveKey}\n                      onChange={this.changePanelKey}\n                      destroyInactiveTabPane\n                      tabBarStyle=\"trapezoid\"\n                    >\n                      {this.renderTabPane()}\n                      \n                    </Tabs>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。"}]


class Demo extends Component {
    constructor(props){
        super(props);
        this.state = {
            open: false
        }
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick() {
        this.setState({ open: !this.state.open })
    }

    render () {
        const { title, example, code, desc  } = this.props;
        let caret = this.state.open ? CARETUP : CARET;
        let text = this.state.open ? "隐藏代码" : "查看代码";

        const footer = (
            <Button shape="block" onClick={ this.handleClick }>
                { caret }
                { text }
            </Button>
        );
        return (
            <Col md={12} >
                <h3>{ title }</h3>
                <p>{ desc }</p>
                <Panel collapsible headerContent expanded={ this.state.open } colors='bordered' header={ example } footer={footer} footerStyle = {{padding: 0}}>
                    <pre><code className="hljs javascript">{ code }</code></pre>
                </Panel>
            </Col>
        )
    }
}

class DemoGroup extends Component {
    constructor(props){
        super(props)
    }
    render () {
        return (
                <Row>
                    {DemoArray.map((child,index) => {

                        return (
                            <Demo example= {child.example} title= {child.title} code= {child.code} desc= {child.desc} key= {index}/>
                        )

                    })}
                </Row>
        )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('tinperBeeDemo'));
