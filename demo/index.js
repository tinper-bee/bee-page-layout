
import { Con, Row, Col } from 'bee-layout';
import { Panel } from 'bee-panel';
import Button from 'bee-button';
import React, { Component } from 'react';
import ReactDOM from 'react-dom';


const CARET = <i className="uf uf-arrow-down"></i>;

const CARETUP = <i className="uf uf-arrow-up"></i>;


var Demo1 = require("./demolist/Demo1");var Demo2 = require("./demolist/Demo2");var Demo3 = require("./demolist/Demo3");var Demo4 = require("./demolist/Demo4");var Demo5 = require("./demolist/Demo5");var Demo6 = require("./demolist/Demo6");var Demo7 = require("./demolist/Demo7");var Demo8 = require("./demolist/Demo8");var DemoArray = [{"example":<Demo1 />,"title":" Navbar和Menus的组合","code":"/**\r\n * @title Navbar和Menus的组合\r\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\r\n *\r\n */\r\n\r\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Badge, FormControl, Menu } from 'tinper-bee';\r\n\n\n\n\n\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nconst MenuToggle = Menu.MenuToggle;\r\nconst SideContainer = Menu.SideContainer;\r\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Header = Navbar.Header;\r\nconst Brand = Navbar.Brand;\r\nconst Nav = Navbar.Nav;\r\n\r\n\r\nclass Demo1 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            expanded: false,\r\n            current: 1\r\n        }\r\n    }\r\n\r\n    onToggle(value) {\r\n        this.setState({expanded: value});\r\n    }\r\n\r\n    handleClick(e) {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"demo1\">\r\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\r\n                    <MenuToggle show/>\r\n                    <Header>\r\n                        <Brand>\r\n                            <a href=\"#\"><img style={{width:140}} src=\"http://design.yyuap.com/logos/logox.png\"/></a>\r\n                        </Brand>\r\n                    </Header>\r\n\r\n                        <Nav pullRight>\r\n                            <NavItem eventKey={1}><FormControl type=\"search\" placeholder=\"Search\"/></NavItem>\r\n                            <NavItem eventKey={2}><Badge dataBadge=\"4\" colors=\"warning\"><Icon\r\n                                type=\"uf-bell\"></Icon></Badge></NavItem>\r\n                        <NavItem eventKey={3}><Icon type=\"uf-bubble-o\"></Icon></NavItem>\r\n                        <Menu mode=\"horizontal\" className=\"dropdown\">\r\n                            <SubMenu title={<span>刘认华<Icon type=\"uf-triangle-down\"></Icon></span>}>\r\n                                <Menu.Item key=\"setting:1\">选项 1</Menu.Item>\r\n                                <Menu.Item key=\"setting:2\">选项 2</Menu.Item>\r\n                                <Menu.Item key=\"setting:3\">选项 3</Menu.Item>\r\n                                <Menu.Item key=\"setting:4\">选项 4</Menu.Item>\r\n                            </SubMenu>\r\n                        </Menu>\r\n                    </Nav>\r\n                </Navbar>\r\n                <SideContainer onToggle={this.onToggle.bind(this)} expanded={this.state.expanded}>\r\n                    <Menu onClick={this.handleClick.bind(this)}\r\n                          style={{ width: 240 }}\r\n                          defaultOpenKeys={['demo3sub1']}\r\n                          selectedKeys={[this.state.current]}\r\n                          mode=\"inline\"\r\n                        >\r\n                        <SubMenu key=\"demo3sub1\" title={<span><span>组织 1</span></span>}>\r\n                            <MenuItemGroup title=\"组 1\">\r\n                                <Menu.Item key=\"1\">选项 1</Menu.Item>\r\n                                <Menu.Item key=\"2\">选项 2</Menu.Item>\r\n                            </MenuItemGroup>\r\n                            <MenuItemGroup title=\"组 2\">\r\n                                <Menu.Item key=\"3\">选项 3</Menu.Item>\r\n                                <Menu.Item key=\"4\">选项 4</Menu.Item>\r\n                            </MenuItemGroup>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"demo3sub2\" title={<span><span>组织 2</span></span>}>\r\n                            <Menu.Item key=\"5\">选项 5</Menu.Item>\r\n                            <Menu.Item key=\"6\">选项 6</Menu.Item>\r\n                            <SubMenu key=\"demo3sub3\" title=\"子项\">\r\n                                <Menu.Item key=\"7\">选项 7</Menu.Item>\r\n                                <Menu.Item key=\"8\">选项 8</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"demo3sub4\" title={<span><span>组织 3</span></span>}>\r\n                            <Menu.Item key=\"9\">选项 9</Menu.Item>\r\n                            <Menu.Item key=\"10\">选项 10</Menu.Item>\r\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\r\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </SideContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。","scss_code":".u-panel .u-panel-heading {\r\n  padding: 0;\r\n}\r\n.horizontal-submenu  {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 17px;\r\n}\r\n.dropdown-menu.u-dropdown {\r\n  left: 30% !important;\r\n  margin-top: 68px;\r\n}\r\n.dropdown-menu {\r\n  .u-dropdown-menu > .u-dropdown-menu-item {\r\n    margin-top: 5px;\r\n    border-bottom: 2px solid transparent;\r\n    cursor: default;\r\n    padding: 0 20px;\r\n\r\n  }\r\n  .u-dropdown-menu > .u-dropdown-menu-item:hover, .u-dropdown-menu > .u-dropdown-menu-item-active, .u-dropdown-menu > .u-dropdown-menu-item-selected {\r\n    background: #fff;\r\n    border-bottom-color: red;\r\n    border-radius: 0;\r\n  }\r\n}"},{"example":<Demo2 />,"title":" ","code":"/**\r\n * @title \r\n * @description \r\n *\r\n */\r\n\r\nimport React, { Component } from 'react';\nimport { Breadcrumb, Navbar, Icon, Menu } from 'tinper-bee';\r\n\n\n\n\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Header = Navbar.Header;\r\nconst Brand = Navbar.Brand;\r\nconst Nav = Navbar.Nav;\r\n\r\n\r\nclass Demo2 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            selectedkey: 1,\r\n            expanded: false,\r\n            currentArray: [],\r\n            openKeys: []\r\n        }\r\n        this.myfilter = this.myfilter.bind(this);\r\n    }\r\n\r\n    handleSelect(index) {\r\n        this.setState({selectedkey: index});\r\n    } \r\n\r\n    onToggle(value) {\r\n        this.setState({expanded: value});\r\n    }\r\n\r\n    handleClick(e) {\r\n        console.log('Clicked: ', e.key);\r\n        this.setState({current: e.key});\r\n    }\r\n    onOpenChange(openKeys) {\r\n        const state = this.state;\r\n        const latestOpenKey = this.myfilter(openKeys,state.openKeys);\r\n        const latestCloseKey = this.myfilter(state.openKeys,openKeys);\r\n\r\n         /*   const latestOpenKey = openKeys.find(key => !(state.openKeys.indexOf(key) > -1));\r\n            const latestCloseKey = state.openKeys.find(key => !(openKeys.indexOf(key) > -1));*/\r\n\r\n        let nextOpenKeys = [];\r\n        if (latestOpenKey) {\r\n            nextOpenKeys = this.getAncestorKeys(latestOpenKey).concat(latestOpenKey);\r\n        }\r\n        if (latestCloseKey) {\r\n            this.state.currentArray.push(latestCloseKey);\r\n            nextOpenKeys = this.getAncestorKeys(latestCloseKey);\r\n        }\r\n        this.setState({openKeys: nextOpenKeys});\r\n    }\r\n    //IE下 array.find（）方法不可用\r\n    myfilter(arr1,arr2) {\r\n        if(arr2.length == 0 || !arr2) {\r\n            return arr1[0];\r\n        }\r\n\r\n        for(var i=0;i<arr1.length;i++)\r\n        {\r\n          if(arr2.indexOf(arr1[i].toString())==-1)\r\n          {\r\n                return arr1[i];\r\n          }      \r\n        }\r\n        return false;\r\n    }\r\n    getAncestorKeys(key) {\r\n\r\n        const map = {\r\n            \"子项\": ['组织2'],\r\n        };\r\n\r\n        return map[key] || [];\r\n    }\r\n\r\n    renderBreadcrumb = () => {\r\n        let currentArray = this.state.currentArray;\r\n        let BreadcrumbDom = [];\r\n        this.state.openKeys.map(function(item) {\r\n            BreadcrumbDom.push(<Breadcrumb.Item>{item}</Breadcrumb.Item>)\r\n        })\r\n        BreadcrumbDom.push(<Breadcrumb.Item active>{this.state.current}</Breadcrumb.Item>)\r\n        return <Breadcrumb>{BreadcrumbDom}</Breadcrumb>;\r\n                            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"demo2\">\r\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\r\n                    <Header>\r\n                        <Brand>\r\n                            <a href=\"#\">\r\n                                <span className=\"logo-placeholder\">logo</span>\r\n                            </a>\r\n                        </Brand>\r\n                    </Header>\r\n\r\n                    <Nav selectedkey={this.state.selectedkey} onSelect={this.handleSelect.bind(this)}>\r\n                        <NavItem eventKey={1}>一级导航</NavItem>\r\n                        <NavItem eventKey={2}>一级导航</NavItem>\r\n                        <NavItem eventKey={3}>一级导航</NavItem>\r\n                        \r\n                    </Nav>\r\n                    <Nav pullRight>\r\n                        \r\n                        <NavItem eventKey={3} className=\"icon-nav\">\r\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\r\n                            <a className=\"\" href=\"#\"> \r\n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\r\n                                刘认华 \r\n                            </a>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                </Navbar>\r\n                <div className=\"inner-container\">\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        className=\"wrapper-menu inner-menu\"\r\n                        openKeys={this.state.openKeys}\r\n                        selectedKeys={[this.state.current]}\r\n                        style={{ width: 240 }}\r\n                        onOpenChange={this.onOpenChange.bind(this)}\r\n                        onClick={this.handleClick.bind(this)}>\r\n                        <SubMenu key=\"组织1\" title={<span><span>组织 1</span></span>}>\r\n                            <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\r\n                            <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\r\n                            <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\r\n                            <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"组织2\" title={<span><span>组织 2</span></span>}>\r\n                            <Menu.Item key=\"选项 5\">选项 5</Menu.Item>\r\n                            <Menu.Item key=\"选项 6\">选项 6</Menu.Item>\r\n                            <SubMenu key=\"子项\" title=\"子项\">\r\n                                <Menu.Item key=\"选项 7\">选项 7</Menu.Item>\r\n                                <Menu.Item key=\"选项 8\">选项 8</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"组织3\" title={<span><span>组织 3</span></span>}>\r\n                            <Menu.Item key=\"选项 9\">选项 9</Menu.Item>\r\n                            <Menu.Item key=\"选项 10\">选项 10</Menu.Item>\r\n                            <Menu.Item key=\"选项 11\">选项 11</Menu.Item>\r\n                            <Menu.Item key=\"选项 12\">选项 12</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                    <div className=\"inner-content\">\r\n                        {\r\n                            this.state.current && <Breadcrumb>{this.renderBreadcrumb()}</Breadcrumb>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                <footer>@2017 用友网络UED Team</footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":" ","scss_code":".logo-placeholder {\r\n  width: 200px;\r\n  display: inline-block;\r\n  height: 40px;\r\n  background: #fff;\r\n  color: #e14c46;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  border-radius: 3px;\r\n}\r\n#demo2 {\r\n  background: whitesmoke;\r\n  padding-bottom: 30px;\r\n}\r\n\r\n#demo2 {\r\n  .inner-container{\r\n    display:flex;\r\n    width: 80%;\r\n    margin-left: 10%;\r\n    background: #fff;\r\n    padding-top: 10px;\r\n    margin-top: 30px;\r\n    padding-bottom: 10px;\r\n  }\r\n  .inner-menu{\r\n    box-shadow: none;\r\n    border: none;\r\n    border-right: 1px solid #d9d9d9;\r\n    min-height: 400px;\r\n  }\r\n  .u-breadcrumb {\r\n    background: none;\r\n  }\r\n  .u-breadcrumb .active {\r\n    color: #666;\r\n  }\r\n  .u-breadcrumb li {\r\n    color: #999;\r\n  }\r\n  .u-navbar {\r\n    background:#E14C46;\r\n    height: 72px;\r\n  }\r\n  .u-navbar-nav {\r\n    min-width: 30%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n  }\r\n  .u-navbar .u-navbar-brand {\r\n    line-height: 40px;\r\n  }\r\n  .u-navbar .u-navbar-nav > li {\r\n    opacity: 0.6;\r\n    font-size: 14px;\r\n    color: #FFFFFF;\r\n    line-height: 47px;\r\n  }\r\n  .u-navbar .u-navbar-nav > li.active {\r\n    opacity: 1;\r\n  }\r\n  .u-menu-inline .u-menu-selected, .u-menu-inline .u-menu-inline .u-menu-item-selected {\r\n    color: #E14C46;\r\n  }\r\n  .u-menu-submenu-selected {\r\n    background: none;\r\n  }\r\n  .u-menu-item-active, .u-menu-submenu-active > .u-menu-submenu-title {\r\n    background-color: #fbb6bc;\r\n  }\r\n  .u-menu-inline .u-menu-selected, .u-menu-inline .u-menu-inline .u-menu-item-selected {\r\n    border-color: #e14c46;\r\n  }\r\n  footer {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 20px;\r\n    font-size: 12px;\r\n    color: #999999;\r\n    line-height: 18px;\r\n  }\r\n  .icon-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    a{\r\n      color: #fff;\r\n      margin-left: 20px;\r\n      img {\r\n        margin-right: 10px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n}\r\n"},{"example":<Demo3 />,"title":" ","code":"/**\r\n * @title \r\n * @description \r\n *\r\n */\r\n\r\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Menu } from 'tinper-bee';\r\n\n\n\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Header = Navbar.Header;\r\nconst Brand = Navbar.Brand;\r\nconst Nav = Navbar.Nav;\r\n\r\n\r\nclass Demo3 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            selectedkey: 1,\r\n            expanded: false,\r\n        }\r\n    }\r\n\r\n    handleSelect(index) {\r\n        this.setState({selectedkey: index});\r\n    } \r\n\r\n    onToggle(value) {\r\n        this.setState({expanded: value});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"demo3\">\r\n                <div className=\"header-top\">\r\n                    <a href=\"#\">登陆</a>\r\n                    <a className=\"part_1\" href=\"#\">注册</a>\r\n                    <span>|</span>\r\n                    <a className=\"part_2\" href=\"#\">通知</a>\r\n                    <a href=\"#\">二维码</a>\r\n                </div>\r\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\r\n                    <Header>\r\n                        <Brand>\r\n                            <a href=\"#\">\r\n                                <span className=\"logo-placeholder\">logo</span>\r\n                            </a>\r\n                        </Brand>\r\n                    </Header>\r\n\r\n                    <Nav selectedkey={this.state.selectedkey} onSelect={this.handleSelect.bind(this)}>\r\n                        <NavItem eventKey={1}>一级导航</NavItem>\r\n                        <NavItem eventKey={2}>一级导航</NavItem>\r\n                        <NavItem eventKey={3}>一级导航</NavItem>\r\n                        \r\n                    </Nav>\r\n                    <Nav pullRight>\r\n                        \r\n                        <NavItem eventKey={3} className=\"icon-nav\">\r\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\r\n                            <a className=\"\" href=\"#\"> \r\n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\r\n                                刘认华 \r\n                            </a>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                </Navbar>\r\n                <div className=\"inner-container\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":" ","scss_code":"\r\n\r\n#demo3{\r\n  .logo-placeholder {\r\n    background: #eee;\r\n    color: #000;\r\n  }\r\n  .inner-container{\r\n    border: 1px solid #d9d9d9;\r\n    border-top: none;\r\n    min-height: 400px;\r\n  }\r\n  .u-navbar {\r\n    background: #fff;\r\n    border-radius: 0;\r\n  }\r\n  .u-navbar-nav {\r\n    min-width: 30%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n  }\r\n  .u-navbar .u-navbar-brand {\r\n    line-height: 40px;\r\n  }\r\n  .u-navbar .u-navbar-nav > li {\r\n    line-height: 47px;\r\n  }\r\n  .u-navbar .u-navbar-nav > li.active {\r\n    color: #e14c46;\r\n    border-bottom: 2px solid;\r\n  }\r\n  .icon-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    a{\r\n      margin-left: 20px;\r\n      img {\r\n        margin-right: 10px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n  .header-top {\r\n    border-bottom: none;\r\n    height: 36px;\r\n    line-height: 36px;\r\n    text-align: right;\r\n    background: #e14c46;\r\n    color: #fff;\r\n    padding-right: 40px;\r\n    a {\r\n      color: #fff;\r\n      opacity: 0.6;\r\n      font-family: MicrosoftYaHei;\r\n      font-size: 12px;\r\n      letter-spacing: 0;\r\n      line-height: 18px;\r\n\r\n    }\r\n    .part_1 {\r\n      margin-right: 20px;\r\n      margin-left: 10px;\r\n    }\r\n    .part_2 {\r\n      margin-left: 20px;\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n}"},{"example":<Demo4 />,"title":"Demo4","code":"\r\n\r\nimport React, { Component } from 'react';\nimport { Dropdown, Navbar, Icon } from 'tinper-bee';\r\nimport ReactDOM from \"react-dom\";\r\nimport Menu,{ Item as MenuItem, Divider, SubMenu, MenuItemGroup }  from 'bee-menus';\r\n\n\r\n\n\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Header = Navbar.Header;\r\nconst Brand = Navbar.Brand;\r\nconst Nav = Navbar.Nav;\r\n\r\n\r\nclass Demo4 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            selectedkey: 1,\r\n            expanded: false,\r\n            current: 'mail',\r\n            dropdownVisible:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let navwidth = document.getElementById(\"demo4\");\r\n        this.setState({navwidth:navwidth+\"px\"})\r\n    }\r\n\r\n    handleSelect(index) {\r\n        this.setState({selectedkey: index});\r\n    } \r\n\r\n    onToggle(value) {\r\n        this.setState({expanded: value});\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n    }\r\n\r\n    onSelectMenu = (key) => {\r\n       console.log(`${key} selected`);\r\n\r\n     }\r\n\r\n    onVisibleChange = (visible) => {\r\n       this.setState({dropdownVisible:visible});\r\n    }\r\n    onClick = (e) => {\r\n      this.setState({dropdownVisible:true});\r\n       console.log(\"onClick\"+e);\r\n    }\r\n\r\n\r\n    render() {\r\n        const menu1 = (\r\n          <Menu className=\"horizontal-submenu\"\r\n            onClick={this.onClick}\r\n            onSelect={this.onSelectMenu}>\r\n            <MenuItem key=\"1\">借款合同</MenuItem>\r\n            <MenuItem key=\"2\">抵/质押合同</MenuItem>\r\n            <MenuItem key=\"3\">担保合同</MenuItem>\r\n            <MenuItem key=\"4\">联保合同</MenuItem>\r\n            <MenuItem key=\"5\">合同审批</MenuItem>\r\n            <MenuItem key=\"6\">抵/质押合同跟踪</MenuItem>\r\n          </Menu>\r\n        );\r\n        return (\r\n            <div id=\"demo4\">\r\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle.bind(this)}>\r\n                    <Header>\r\n                        <Brand>\r\n                            <a href=\"#\">\r\n                                <span className=\"logo-placeholder\">logo</span>\r\n                            </a>\r\n                        </Brand>\r\n                    </Header>\r\n                    <Nav selectedkey={this.state.selectedkey} onSelect={this.handleSelect.bind(this)}>\r\n                        <NavItem eventKey={1}>组织 1</NavItem>\r\n                        <NavItem eventKey={2}>组织 2</NavItem>\r\n                        <NavItem eventKey={3}>\r\n                            <Dropdown\r\n                                ref=\"dropdown\"\r\n                                overlayClassName=\"dropdown-menu\"\r\n                                style={{width:this.state.navwidth}}\r\n                                trigger={['click']}\r\n                                visible = {this.state.dropdownVisible}\r\n                                overlay={menu1}\r\n                                animation=\"slide-up\"\r\n                                onVisibleChange={this.onVisibleChange}>\r\n                                <span   >点击显示</span>\r\n                            </Dropdown>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                    \r\n                    <Nav pullRight>\r\n                        \r\n                        <NavItem eventKey={3} className=\"icon-nav\">\r\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\r\n                            <a className=\"\" href=\"#\"> \r\n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\r\n                                刘认华 \r\n                            </a>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                </Navbar>\r\n                <div className=\"inner-container\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":"","scss_code":"#demo4 {\r\n  .logo-placeholder {\r\n    height: 30px;\r\n    line-height: 26px;\r\n  }\r\n  .u-navbar {\r\n    background:#E14C46;\r\n    height: 56px;\r\n    border: none;\r\n    border-radius: 0;\r\n  }\r\n  .u-navbar-nav {\r\n    min-width: 30%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n  }\r\n  .u-navbar .u-navbar-brand {\r\n    line-height: 20px;\r\n  }\r\n  .u-navbar .u-navbar-nav > li {\r\n    opacity: 0.6;\r\n    font-size: 14px;\r\n    color: #FFFFFF;\r\n    line-height: 30px;\r\n  }\r\n  .u-navbar .u-navbar-nav > li.active {\r\n    opacity: 1;\r\n  }\r\n  .u-menu-inline .u-menu-selected, .u-menu-inline .u-menu-inline .u-menu-item-selected {\r\n    color: #E14C46;\r\n  }\r\n  .u-menu-submenu-selected {\r\n    background: none;\r\n  }\r\n  .u-menu-item-active, .u-menu-submenu-active > .u-menu-submenu-title {\r\n    background-color: #fbb6bc;\r\n  }\r\n  .u-menu-inline .u-menu-selected, .u-menu-inline .u-menu-inline .u-menu-item-selected {\r\n    border-color: #e14c46;\r\n  }\r\n  .icon-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    a{\r\n      color: #fff;\r\n      margin-left: 20px;\r\n      img {\r\n        margin-right: 10px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n  .inner-container{\r\n    border: 1px solid #d9d9d9;\r\n    border-top: none;\r\n    min-height: 400px;\r\n  }\r\n\r\n\r\n  .u-navbar .u-navbar-nav > li.active:after{\r\n    position: absolute;\r\n    border-left: 9px solid transparent;\r\n    border-right: 9px solid transparent;\r\n    border-bottom: 9px solid #fff;\r\n    content: \" \";\r\n    display: block;\r\n    width: 0;\r\n    height: 0;\r\n    top: 51px;\r\n    left: 20px;\r\n  }\r\n\r\n\r\n}"},{"example":<Demo5 />,"title":" Demo5","code":"/**\r\n * @title Demo5\r\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\r\n *\r\n */\r\n\r\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Breadcrumb, Menu } from 'tinper-bee';\r\n\n\n\n\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst SideContainer = Menu.SideContainer;\r\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Nav = Navbar.Nav;\r\n\r\nconsole.log(SideContainer);\r\n\r\nclass Demo5 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            selectedkey: 1,\r\n            expanded: false,\r\n            currentArray: [],\r\n            openKeys: []\r\n        }\r\n        this.myfilter = this.myfilter.bind(this);\r\n    }\r\n\r\n    handleSelect(index) {\r\n        this.setState({selectedkey: index});\r\n    } \r\n\r\n    onToggle(value) {\r\n        this.setState({expanded: value});\r\n    }\r\n\r\n    handleClick(e) {\r\n        console.log('Clicked: ', e.key);\r\n        this.setState({current: e.key});\r\n    }\r\n    onOpenChange(openKeys) {\r\n        const state = this.state;\r\n        const latestOpenKey = this.myfilter(openKeys,state.openKeys);\r\n        const latestCloseKey = this.myfilter(state.openKeys,openKeys);\r\n\r\n         /*   const latestOpenKey = openKeys.find(key => !(state.openKeys.indexOf(key) > -1));\r\n            const latestCloseKey = state.openKeys.find(key => !(openKeys.indexOf(key) > -1));*/\r\n\r\n        let nextOpenKeys = [];\r\n        if (latestOpenKey) {\r\n            nextOpenKeys = this.getAncestorKeys(latestOpenKey).concat(latestOpenKey);\r\n        }\r\n        if (latestCloseKey) {\r\n            this.state.currentArray.push(latestCloseKey);\r\n            nextOpenKeys = this.getAncestorKeys(latestCloseKey);\r\n        }\r\n        this.setState({openKeys: nextOpenKeys});\r\n    }\r\n    //IE下 array.find（）方法不可用\r\n    myfilter(arr1,arr2) {\r\n        if(arr2.length == 0 || !arr2) {\r\n            return arr1[0];\r\n        }\r\n\r\n        for(var i=0;i<arr1.length;i++)\r\n        {\r\n          if(arr2.indexOf(arr1[i].toString())==-1)\r\n          {\r\n                return arr1[i];\r\n          }      \r\n        }\r\n        return false;\r\n    }\r\n    getAncestorKeys(key) {\r\n\r\n        const map = {\r\n            \"子项\": ['组织2'],\r\n        };\r\n\r\n        return map[key] || [];\r\n    }\r\n\r\n    renderBreadcrumb = () => {\r\n        let currentArray = this.state.currentArray;\r\n        let BreadcrumbDom = [];\r\n        this.state.openKeys.map(function(item,index) {\r\n            BreadcrumbDom.push(<Breadcrumb.Item key={index}>{item}</Breadcrumb.Item>)\r\n        })\r\n        BreadcrumbDom.push(<Breadcrumb.Item active>{this.state.current}</Breadcrumb.Item>)\r\n        return <Breadcrumb>{BreadcrumbDom}</Breadcrumb>;\r\n                            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"demo5\">\r\n                <Navbar fluid expanded={this.state.expanded} onToggle={this.onToggle}>\r\n                    <Nav pullRight>\r\n                        <NavItem eventKey={3} className=\"icon-nav\">\r\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\r\n                            <a className=\"\" href=\"#\"> \r\n                                <img alt=\"@ahua52\" className=\"float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\r\n                                刘认华 \r\n                            </a>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className=\"content\">\r\n                    <div className=\"sider-menu\">\r\n                        <div className=\"logo-header\">\r\n                            <a href=\"#\">\r\n                                <span className=\"logo-placeholder\">logo</span>\r\n                            </a>\r\n                        </div>\r\n                        <Menu mode=\"inline\" className=\"wrapper-menu\" openKeys={this.state.openKeys} selectedKeys={[this.state.current]} style={{ width: 240 }} onOpenChange={this.onOpenChange.bind(this)}  onClick={this.handleClick.bind(this)}>\r\n                            <SubMenu key=\"组织1\" title={<span><span>组织 1</span></span>}>\r\n                                <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\r\n                                <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\r\n                                <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\r\n                                <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu key=\"组织2\" title={<span><span>组织 2</span></span>}>\r\n                                <Menu.Item key=\"选项 5\">选项 5</Menu.Item>\r\n                                <Menu.Item key=\"选项 6\">选项 6</Menu.Item>\r\n                                <SubMenu key=\"子项\" title=\"子项\">\r\n                                    <Menu.Item key=\"选项 7\">选项 7</Menu.Item>\r\n                                    <Menu.Item key=\"选项 8\">选项 8</Menu.Item>\r\n                                </SubMenu>\r\n                            </SubMenu>\r\n                            <SubMenu key=\"组织3\" title={<span><span>组织 3</span></span>}>\r\n                                <Menu.Item key=\"选项 9\">选项 9</Menu.Item>\r\n                                <Menu.Item key=\"选项 10\">选项 10</Menu.Item>\r\n                                <Menu.Item key=\"选项 11\">选项 11</Menu.Item>\r\n                                <Menu.Item key=\"选项 12\">选项 12</Menu.Item>\r\n                            </SubMenu>\r\n                        </Menu>\r\n                    </div>\r\n                    <div className=\"inner-container\">\r\n                        {this.state.current && <Breadcrumb>{this.renderBreadcrumb()}</Breadcrumb>}\r\n                        <div className=\"inner-content\"></div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。","scss_code":"#demo5 {\r\n  .logo-placeholder {\r\n    height: 30px;\r\n    margin-top: 15px;\r\n    line-height: 30px;\r\n  }\r\n  .u-navbar {\r\n    height: 55px;\r\n    background: #fff;\r\n    border-color: #e9e9e9;\r\n  }\r\n  .sider-menu {\r\n    margin-top: -55px;\r\n    z-index: 2;\r\n    position: relative;\r\n    width: 240px;\r\n  }\r\n  .logo-header {\r\n    width: 240px;\r\n    text-align: center;\r\n    background: #E14C46;\r\n    height: 55px;\r\n    line-height: 55px;\r\n  }\r\n  .u-menu-sub {\r\n    background: rgba(74,81,93,0.60);\r\n    color: #FFFFFF;\r\n  }\r\n  .u-menu-sub .u-menu-submenu {\r\n    color: #a6aab0;\r\n  }\r\n  .u-menu-sub .u-menu-item {\r\n  }\r\n  .u-menu-submenu-active,.u-menu-item-active {\r\n    background: none;\r\n    color: #fff;\r\n  }\r\n  .u-menu-inline .u-menu-selected, .u-menu-inline .u-menu-inline .u-menu-item-selected {\r\n    color: #fff;\r\n    opacity: 1;\r\n    border: none;\r\n  }\r\n  .u-menu-submenu .u-menu-sub {\r\n    background: none;\r\n  }\r\n  .u-menu-sub .u-menu-item-active {\r\n    background: none;\r\n    opacity: 1;\r\n  }\r\n  .inner-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: whitesmoke;\r\n    padding-left: 30px;\r\n    padding-top: 20px;\r\n  }\r\n  .inner-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 400px;\r\n    min-width: 400px;\r\n    background: #fff;\r\n  }\r\n  .content {\r\n    display: flex;\r\n  }\r\n  .u-menu-inline {\r\n    margin-top: 0;\r\n    border-top: 0;\r\n    border-radius: 0;\r\n  }\r\n  .u-menu .u-menu-sub.u-menu-inline {\r\n    padding-left: 12px;\r\n  }\r\n  .u-menu-inline > .u-menu-submenu > .u-menu-submenu-title {\r\n    background: none;\r\n  }\r\n  .wrapper-menu {\r\n    min-height: 400px;\r\n    background: #5e6670;\r\n    color: #fff;\r\n  }\r\n  .u-menu-inline > .u-menu-item{\r\n    color: #a6aab0;\r\n    cursor: pointer;\r\n  }\r\n  .u-menu-submenu-selected {\r\n    background: none;\r\n    color: #fff;\r\n  }\r\n  .icon-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    a{\r\n      margin-left: 20px;\r\n      img {\r\n        margin-right: 10px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n  .u-breadcrumb {\r\n    margin-bottom: 0;\r\n    margin-top: 0;\r\n    padding-top: 0;\r\n    padding-left: 0;\r\n  }\r\n}"},{"example":<Demo6 />,"title":" Navbar和Menus的组合","code":"/**\r\n * @title Navbar和Menus的组合\r\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\r\n *\r\n */\r\n\r\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Menu } from 'tinper-bee';\r\n\r\n\n\n\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst SideContainer = Menu.SideContainer;\r\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Nav = Navbar.Nav;\r\n\r\n\r\nclass Demo6 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            expanded: false,\r\n            current: \"选项 1\"\r\n        }\r\n    }\r\n\r\n    onToggle = (value) => {\r\n        this.setState({expanded: !this.state.expanded});\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key\r\n        });\r\n    }\r\n\r\n    handleMenuClick(e) {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"demo6\">\r\n                <Navbar fluid expanded={this.state.expanded} >\r\n                   <div className=\"toggle-show\" onClick={this.onToggle}>\r\n                        <Icon type=\"uf-align-justify\" />\r\n                   </div>\r\n                   <Nav pullRight>\r\n                        <NavItem eventKey={3} className=\"icon-nav\">\r\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\r\n                            <a className=\"\" href=\"#\"> \r\n                                <img alt=\"@ahua52\" className=\" float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\r\n                                刘认华 \r\n                            </a>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <SideContainer expanded={this.state.expanded}>\r\n                    <Menu onClick={this.handleClick.bind(this)} style={{ width: 70 }} mode=\"vertical\">\r\n                        <SubMenu key=\"sub1\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\r\n                            <Menu.Item key=\"1\">选项 1</Menu.Item>\r\n                            <Menu.Item key=\"2\">选项 2</Menu.Item>\r\n                            <Menu.Item key=\"3\">选项 3</Menu.Item>\r\n                            <Menu.Item key=\"4\">选项 4</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub2\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\r\n                            <Menu.Item key=\"5\">选项 5</Menu.Item>\r\n                            <Menu.Item key=\"6\">选项 6</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub4\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\r\n                            <Menu.Item key=\"9\">选项 9</Menu.Item>\r\n                            <Menu.Item key=\"10\">选项 10</Menu.Item>\r\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\r\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </SideContainer>\r\n                <div className={this.state.expanded?\"inner-container expanded\":\"inner-container\"}>\r\n                    <div className=\"inner-content\">\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            className=\"wrapper-menu inner-menu\"\r\n                            onClick={this.handleClick}\r\n                            openKeys={this.state.openKeys}\r\n                            selectedKeys={[this.state.current]}\r\n                            style={{ width: 240 }}>\r\n                            <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\r\n                            <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\r\n                            <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\r\n                            <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\r\n                            \r\n                        </Menu>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。","scss_code":"#demo6 {\r\n  .u-navbar-side-container {\r\n    width: 70px;\r\n  }\r\n  .u-menu-vertical .u-menu-submenu-title:after {\r\n    content: \"\"\r\n  }\r\n  .u-navbar-side-container {\r\n    background: none;\r\n    border: none;\r\n    box-shadow: none;\r\n    z-index: 2;\r\n    position: relative;\r\n    margin-top: -1px;\r\n    float: left;\r\n  }\r\n  .u-navbar-side-container > .u-menu {\r\n    min-height: 435px;\r\n  }\r\n  .u-navbar-side-container .u-menu {\r\n    color: #b3b7bc;\r\n    background: #5E6670;\r\n    padding-top: 10px;\r\n    margin-top: 0;\r\n    border-radius: 0;\r\n\r\n  }\r\n  .u-menu-vertical .u-menu-sub .u-menu-item {\r\n    padding: 6px;\r\n    text-align: center;\r\n    cursor: default\r\n  }\r\n  .u-menu .u-menu-vertical.u-menu-sub {\r\n    background: #4a515d !important;\r\n    margin-left: 0;\r\n  }\r\n  .u-menu-submenu-vertical > .u-menu {\r\n    min-width: 90px;\r\n  }\r\n  .u-menu-item-active, .u-menu-submenu-active > .u-menu-submenu-title {\r\n    background: #4A515D;\r\n    color: #fff;\r\n  }\r\n\r\n  .u-menu-vertical > .u-menu-submenu > .u-menu-submenu-title {\r\n    padding-left: 5px;\r\n  }\r\n  .u-menu-item, .u-menu-submenu-title {\r\n    font-size: 12px;\r\n  }\r\n  .first-menu {\r\n    display: flex;\r\n  }\r\n  .u-container-fluid {\r\n    padding-left: 0;\r\n    margin-left: -1px;\r\n  }\r\n  .toggle-show {\r\n    border: 1px solid #E14C46;\r\n    width: 70px;\r\n    border-radius: 0;\r\n    background: red;\r\n    height: 54px;\r\n    margin: 0;\r\n    padding: 0;\r\n    color: #fff;\r\n    display: inline-block;\r\n    text-align: center;\r\n    line-height: 54px\r\n  }\r\n  .wrapper-menu {\r\n    min-height: 400px;\r\n    background: #5e6670;\r\n    color: #fff;\r\n  }\r\n  .toggle-show .uf{\r\n    font-size: 25px;\r\n  }\r\n  .inner-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: whitesmoke;\r\n    padding: 20px 30px 0;\r\n    padding-left: 100px;\r\n    transition:all .5s ease-in-out;\r\n  }\r\n  .inner-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 400px;\r\n    min-width: 400px;\r\n    background: #fff;\r\n  }\r\n  .inner-content{\r\n    > .u-menu {\r\n      border:none;\r\n      border-right: 1px solid #d9d9d9;\r\n      border-radius: 0;\r\n      box-shadow: none;\r\n    }\r\n    .u-menu-item {\r\n      font-size: 14px;\r\n      color: #666666;\r\n      padding-left: 30px !important;\r\n      border-right: 2px solid transparent;\r\n    }\r\n    .u-menu-item-active,.u-menu-item-selected {\r\n      background: none;\r\n      color: #E64A46;\r\n      border-color: #E64A46;\r\n    }\r\n  }\r\n  .inner-container.expanded {\r\n    padding-left: 30px;\r\n  }\r\n  .icon-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    a{\r\n      margin-left: 20px;\r\n      img {\r\n        margin-right: 10px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n}"},{"example":<Demo7 />,"title":" Navbar和Menus的组合","code":"/**\r\n * @title Navbar和Menus的组合\r\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\r\n *\r\n */\r\n\r\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Menu } from 'tinper-bee';\r\n\r\n\n\n\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst SideContainer = Menu.SideContainer;\r\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Nav = Navbar.Nav;\r\n\r\n\r\nclass Demo7 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            expanded: false,\r\n            current: \"选项 1\"\r\n        }\r\n    }\r\n\r\n    onToggle = (value) => {\r\n        this.setState({expanded: !this.state.expanded});\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key\r\n        });\r\n    }\r\n\r\n    handleMenuClick(e) {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"demo7\">\r\n                <Navbar fluid expanded={this.state.expanded} >\r\n                   <div className=\"toggle-show\" onClick={this.onToggle}>\r\n                        <Icon type=\"uf-align-justify\" />\r\n                   </div>\r\n                   <Nav pullRight>\r\n                        <NavItem eventKey={3} className=\"icon-nav\">\r\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\r\n                            <a className=\"\" href=\"#\"> \r\n                                <img alt=\"@ahua52\" className=\"float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\r\n                                刘认华 \r\n                            </a>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <SideContainer expanded={this.state.expanded}>\r\n                    <Menu className=\"sub-inline\" onClick={this.handleClick.bind(this)} style={{ width: 70 }} mode=\"vertical\">\r\n                        <SubMenu  key=\"sub1\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\r\n                            <Menu.Item key=\"1\">选项 1</Menu.Item>\r\n                            <Menu.Item key=\"2\">选项 2</Menu.Item>\r\n                            <Menu.Item key=\"3\">选项 3</Menu.Item>\r\n                            <Menu.Item key=\"4\">选项 4</Menu.Item>\r\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\r\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\r\n                            <Menu.Item key=\"13\">选项 13</Menu.Item>\r\n                            <Menu.Item key=\"14\">选项 14</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub2\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\r\n                            <Menu.Item key=\"5\">选项 5</Menu.Item>\r\n                            <Menu.Item key=\"6\">选项 6</Menu.Item>\r\n                            <Menu.Item key=\"15\">选项 15</Menu.Item>\r\n                            <Menu.Item key=\"16\">选项 16</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub4\" title={<span className=\"first-menu\"><Icon type=\"uf-pc-2\" /><span>组织</span></span>}>\r\n                            <Menu.Item key=\"9\">选项 9</Menu.Item>\r\n                            <Menu.Item key=\"19\">选项 19</Menu.Item>\r\n                            <Menu.Item key=\"10\">选项 10</Menu.Item>\r\n                            <Menu.Item key=\"11\">选项 11</Menu.Item>\r\n                            <Menu.Item key=\"12\">选项 12</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </SideContainer>\r\n                <div className={this.state.expanded?\"inner-container expanded\":\"inner-container\"}>\r\n                    <div className=\"inner-content\">\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            className=\"wrapper-menu inner-menu\"\r\n                            onClick={this.handleClick}\r\n                            openKeys={this.state.openKeys}\r\n                            selectedKeys={[this.state.current]}\r\n                            style={{ width: 240 }}>\r\n                            <Menu.Item key=\"选项 1\">选项 1</Menu.Item>\r\n                            <Menu.Item key=\"选项 2\">选项 2</Menu.Item>\r\n                            <Menu.Item key=\"选项 3\">选项 3</Menu.Item>\r\n                            <Menu.Item key=\"选项 4\">选项 4</Menu.Item>\r\n                            \r\n                        </Menu>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。","scss_code":"#demo7 {\r\n  .u-navbar-side-container {\r\n    width: 70px;\r\n  }\r\n  .u-menu-vertical .u-menu-submenu-title:after {\r\n    content: \"\"\r\n  }\r\n  .u-navbar-side-container {\r\n    background: none;\r\n    border: none;\r\n    box-shadow: none;\r\n    z-index: 2;\r\n    position: relative;\r\n    margin-top: -1px;\r\n    float: left;\r\n  }\r\n  .u-navbar-side-container > .u-menu {\r\n    min-height: 435px;\r\n  }\r\n  .u-navbar-side-container .u-menu {\r\n    color: #b3b7bc;\r\n    background: #5E6670;\r\n    padding-top: 10px;\r\n    margin-top: 0;\r\n    border-radius: 0;\r\n\r\n  }\r\n  .u-menu-vertical .u-menu-sub .u-menu-item {\r\n    padding: 6px;\r\n    text-align: center;\r\n    cursor: default\r\n  }\r\n  .u-menu .u-menu-vertical.u-menu-sub {\r\n    background: #4a515d !important;\r\n    margin-left: 0;\r\n  }\r\n  .u-menu-submenu-vertical > .u-menu {\r\n    min-width: 90px;\r\n  }\r\n  .u-menu-item-active, .u-menu-submenu-active > .u-menu-submenu-title {\r\n    background: #4A515D;\r\n    color: #fff;\r\n  }\r\n\r\n  .u-menu-vertical > .u-menu-submenu > .u-menu-submenu-title {\r\n    padding-left: 5px;\r\n  }\r\n  .u-menu-item, .u-menu-submenu-title {\r\n    font-size: 12px;\r\n  }\r\n  .first-menu {\r\n    display: flex;\r\n  }\r\n  .u-container-fluid {\r\n    padding-left: 0;\r\n    margin-left: -1px;\r\n  }\r\n  .toggle-show {\r\n    border: 1px solid #E14C46;\r\n    width: 70px;\r\n    border-radius: 0;\r\n    background: red;\r\n    height: 54px;\r\n    margin: 0;\r\n    padding: 0;\r\n    color: #fff;\r\n    display: inline-block;\r\n    text-align: center;\r\n    line-height: 54px\r\n  }\r\n  .wrapper-menu {\r\n    min-height: 400px;\r\n    background: #5e6670;\r\n    color: #fff;\r\n  }\r\n  .toggle-show .uf{\r\n    font-size: 25px;\r\n  }\r\n  .inner-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: whitesmoke;\r\n    padding: 20px 30px 0;\r\n    padding-left: 100px;\r\n    transition:all .5s ease-in-out;\r\n  }\r\n  .inner-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 400px;\r\n    min-width: 400px;\r\n    background: #fff;\r\n  }\r\n  .inner-content{\r\n    > .u-menu {\r\n      border:none;\r\n      border-right: 1px solid #d9d9d9;\r\n      border-radius: 0;\r\n      box-shadow: none;\r\n    }\r\n    .u-menu-item {\r\n      font-size: 14px;\r\n      color: #666666;\r\n      padding-left: 30px !important;\r\n      border-right: 2px solid transparent;\r\n    }\r\n    .u-menu-item-active,.u-menu-item-selected {\r\n      background: none;\r\n      color: #E64A46;\r\n      border-color: #E64A46;\r\n    }\r\n  }\r\n  .inner-container.expanded {\r\n    padding-left: 30px;\r\n  }\r\n  .icon-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    a{\r\n      margin-left: 20px;\r\n      img {\r\n        margin-right: 10px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .sub-inline .u-menu-sub {\r\n    width: 200px;\r\n  }\r\n  .sub-inline .u-menu-sub .u-menu-item {\r\n    width: 60px;\r\n    float: left;\r\n  }\r\n}"},{"example":<Demo8 />,"title":" Navbar和Menus的组合","code":"/**\r\n * @title Navbar和Menus的组合\r\n * @description 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。\r\n *\r\n */\r\n\r\nimport React, { Component } from 'react';\nimport { Navbar, Icon, Menu } from 'tinper-bee';\r\n\n\r\nimport Tabs, { TabPane } from 'bee-tabs';\r\n\r\n\n\n\r\nconst SideContainer = Menu.SideContainer;\r\n\r\nconst NavItem = Navbar.NavItem;\r\nconst Nav = Navbar.Nav;\r\n\r\n\r\nclass Demo8 extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            expanded: false,\r\n            current: \"选项 1\",\r\n            panelActiveKey: \"1\",\r\n            tabPaneList:{1:\"fdaf\",3:\"fdsafds\",55:\"fdsafdsa\"}\r\n        }\r\n    }\r\n\r\n    onToggle = (value) => {\r\n        this.setState({expanded: !this.state.expanded});\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        let map = {\r\n            \"选项 1\": \"选项 1\",\r\n            \"选项 2\": \"选项 2\",\r\n            \"选项 3\": \"选项 3\",\r\n            \"选项 4\": \"选项 4\"\r\n        }\r\n        let tabPaneList = this.state.tabPaneList;\r\n\r\n        if(!tabPaneList[e.key]) {\r\n            tabPaneList[e.key] = map[e.key];\r\n        }\r\n        \r\n        this.setState({\r\n            current: e.key,\r\n            tabPaneList:tabPaneList\r\n        });\r\n    }\r\n\r\n    handleMenuClick(e) {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n    }\r\n\r\n    changePanelKey = (panelActiveKey) => {\r\n        this.setState({panelActiveKey: panelActiveKey});\r\n    }\r\n\r\n    closeTab = (index) => {\r\n        let self = this;\r\n        return function () {\r\n            let tabPaneList = self.state.tabPaneList;\r\n\r\n            delete tabPaneList[index];\r\n            let tempKey;\r\n            if(self.state.panelActiveKey==index && String(tabPaneList) !== '{}') {\r\n                for(var i in tabPaneList) {\r\n                    tempKey = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(tempKey) {\r\n                self.setState({tabPaneList:tabPaneList,panelActiveKey:tempKey})\r\n            }else {\r\n                self.setState({tabPaneList:tabPaneList})\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    renderNavTabPane = () => {\r\n        let domArray = [];\r\n        let tabPaneList = this.state.tabPaneList;\r\n        console.log(tabPaneList);\r\n        let self = this;\r\n        for(var i in tabPaneList) {\r\n            domArray.push(\r\n                <TabPane key={i} tab={<span className=\"title-wrapper\"><span>{tabPaneList[i]}</span><Icon type=\"uf-close-bold\" onClick={self.closeTab(i)}/></span>}>\r\n                </TabPane>\r\n            )\r\n        }\r\n\r\n        return domArray;\r\n    }\r\n\r\n    renderTabPane = () => {\r\n        let domArray = [];\r\n        let tabPaneList = this.state.tabPaneList;\r\n        for(var i in tabPaneList) {\r\n            domArray.push(\r\n                <TabPane key={i} tab={<span className=\"title-wrapper\"><span>{tabPaneList[i]}</span><Icon type=\"uf-close-bold\" /></span>}>\r\n                    key {i} {tabPaneList[i]}\r\n                </TabPane>\r\n            )\r\n        }\r\n\r\n        return domArray;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"demo8\">\r\n                <Navbar fluid expanded={this.state.expanded} >\r\n                   <div className=\"toggle-show\" onClick={this.onToggle}>\r\n                        <Icon type=\"uf-align-justify\" />\r\n                   </div>\r\n                    <Nav className=\"u-navbar-nav-tab\">\r\n                        <Tabs\r\n                          activeKey={this.state.panelActiveKey}\r\n                          onChange={this.changePanelKey}\r\n                          destroyInactiveTabPane\r\n                          tabBarStyle=\"trapezoid\"\r\n                        >\r\n                         {this.renderNavTabPane()}\r\n                          \r\n                        </Tabs>\r\n                    </Nav>\r\n                   <Nav pullRight>\r\n                        \r\n                        <NavItem eventKey={3} className=\"icon-nav\">\r\n                            <a href=\"#\"> <Icon type=\"uf uf-qm-c\"></Icon> 帮助 </a>\r\n                            <a className=\"\" href=\"#\"> \r\n                                <img alt=\"@ahua52\" className=\"float-left mr-1\" src=\"https://avatars2.githubusercontent.com/u/19704104?v=4&amp;s=40\" height=\"20\" width=\"20\" />\r\n                                刘认华 \r\n                            </a>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <SideContainer expanded={this.state.expanded}>\r\n                    <Menu mode=\"inline\" onClick={this.handleClick} openKeys={this.state.openKeys} selectedKeys={[this.state.current]} className=\"inner-menu\">\r\n                        <Menu.Item key=\"选项 1\">选项</Menu.Item>\r\n                        <Menu.Item key=\"选项 2\">选项</Menu.Item>\r\n                        <Menu.Item key=\"选项 3\">选项</Menu.Item>\r\n                        <Menu.Item key=\"选项 4\">选项</Menu.Item>\r\n                    </Menu>\r\n\r\n                </SideContainer>\r\n                <div className={this.state.expanded?\"inner-container expanded\":\"inner-container\"}>\r\n                    <Tabs\r\n                      activeKey={this.state.panelActiveKey}\r\n                      onChange={this.changePanelKey}\r\n                      destroyInactiveTabPane\r\n                      tabBarStyle=\"trapezoid\"\r\n                    >\r\n                      {this.renderTabPane()}\r\n                      \r\n                    </Tabs>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":" 示例采取navbar与menus的组合，达到一种PC端常用的复合导航菜单。导航添加了常用的搜索表单消息提醒等组件。","scss_code":"#demo8 {\r\n  .u-navbar {\r\n    background: #E14C46;\r\n  }\r\n  .u-navbar .u-navbar-nav > li > a {\r\n    color: #fff;\r\n  }\r\n  .u-navbar-side-container {\r\n    width: 70px;\r\n  }\r\n  .u-menu-vertical .u-menu-submenu-title:after {\r\n    content: \"\"\r\n  }\r\n  .u-navbar-side-container {\r\n    background: none;\r\n    border: none;\r\n    box-shadow: none;\r\n    z-index: 2;\r\n    position: relative;\r\n    margin-top: -1px;\r\n    float: left;\r\n  }\r\n  .u-navbar-side-container > .u-menu {\r\n    min-height: 435px;\r\n    width: 70px;\r\n  }\r\n  .u-navbar-side-container .u-menu {\r\n    color: #b3b7bc;\r\n    background: #5E6670;\r\n    padding-top: 10px;\r\n    margin-top: 0;\r\n    border-radius: 0;\r\n\r\n  }\r\n  .u-menu-vertical .u-menu-sub .u-menu-item {\r\n    padding: 6px;\r\n    text-align: center;\r\n    cursor: default\r\n  }\r\n  .u-menu .u-menu-vertical.u-menu-sub {\r\n    background: #4a515d !important;\r\n    margin-left: 0;\r\n  }\r\n  .u-menu-submenu-vertical > .u-menu {\r\n    min-width: 90px;\r\n  }\r\n  .u-menu-item-active, .u-menu-submenu-active > .u-menu-submenu-title {\r\n    background: #4A515D;\r\n    color: #fff;\r\n  }\r\n\r\n  .u-menu-vertical > .u-menu-submenu > .u-menu-submenu-title {\r\n    padding-left: 5px;\r\n  }\r\n  .u-menu-item, .u-menu-submenu-title {\r\n    font-size: 12px;\r\n  }\r\n  .first-menu {\r\n    display: flex;\r\n  }\r\n  .u-container-fluid {\r\n    padding-left: 0;\r\n    margin-left: -1px;\r\n  }\r\n  .toggle-show {\r\n    border: 1px solid #E14C46;\r\n    width: 70px;\r\n    border-radius: 0;\r\n    background: red;\r\n    height: 54px;\r\n    margin: 0;\r\n    padding: 0;\r\n    color: #fff;\r\n    display: inline-block;\r\n    text-align: center;\r\n    line-height: 54px;\r\n    float:left;\r\n  }\r\n  .u-navbar .u-navbar-nav-tab {\r\n    width: 65%;\r\n  }\r\n  .wrapper-menu {\r\n    min-height: 400px;\r\n    background: #5e6670;\r\n    color: #fff;\r\n  }\r\n  .toggle-show .uf{\r\n    font-size: 25px;\r\n  }\r\n  .inner-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0 20px 30px 0;\r\n    padding-left: 100px;\r\n    min-height: 400px;\r\n    transition:all .5s ease-in-out;\r\n  }\r\n  .inner-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 400px;\r\n    min-width: 400px;\r\n    background: #fff;\r\n  }\r\n  .inner-content{\r\n    > .u-menu {\r\n      border:none;\r\n      border-right: 1px solid #d9d9d9;\r\n      border-radius: 0;\r\n      box-shadow: none;\r\n    }\r\n    .u-menu-item {\r\n      font-size: 14px;\r\n      color: #666666;\r\n      padding-left: 30px !important;\r\n      border-right: 2px solid transparent;\r\n    }\r\n    .u-menu-item-active,.u-menu-item-selected {\r\n      background: none;\r\n      color: #E64A46;\r\n      border-color: #E64A46;\r\n    }\r\n  }\r\n  .inner-container.expanded {\r\n    padding-left: 30px;\r\n  }\r\n  .icon-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    a{\r\n      margin-left: 20px;\r\n      img {\r\n        margin-right: 10px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .sub-inline .u-menu-sub {\r\n    width: 200px;\r\n  }\r\n  .sub-inline .u-menu-sub .u-menu-item {\r\n    width: 60px;\r\n    float: left;\r\n  }\r\n  .u-tabs-trapezoid {\r\n    border: none;\r\n  }\r\n  .u-tabs-trapezoid .u-tabs-nav .u-tabs-tab::before {\r\n\r\n    border-bottom-color: #e0e0e0;\r\n  }\r\n  .u-tabs-trapezoid .u-tabs-nav .u-tabs-tab-active::after {\r\n    border-left: #e14c46 15px solid;\r\n    background-color: #e14c46;\r\n    border-right-color: #e14c46;\r\n    transform: perspective(900px) rotate3d(-1, 0, 0, -90deg);\r\n  }\r\n  .u-tabs-trapezoid .u-tabs-nav .u-tabs-tab-active::before {\r\n    border-bottom-color: #fff;\r\n  }\r\n  .u-tabs-nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .u-tabs-trapezoid .u-tabs-nav .u-tabs-tab {\r\n    width: 100%;\r\n    color: #757070;\r\n    min-width: 150px;\r\n  }\r\n  .title-wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .title-wrapper .uf{\r\n    font-size: 10px;\r\n  }\r\n  .inner-container .u-tabs-bar {\r\n    display: none;\r\n  }\r\n  .u-navbar-nav-tab .u-tabs-trapezoid {\r\n    margin-top: 17px;\r\n    border: none;\r\n  }\r\n  .u-tabs-trapezoid .u-tabs-nav .u-tabs-tab-active {\r\n    color: #757070;\r\n  }\r\n  .u-tabs-trapezoid .u-tabs-bar, .u-tabs-trapezoid .u-tabs-nav-container {\r\n    background: #e14c46;\r\n  }\r\n}"}]


class Demo extends Component {
    constructor(props){
        super(props);
        this.state = {
            open: false
        }
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick() {
        this.setState({ open: !this.state.open })
    }

    render () {
        const { title, example, code, desc, scss_code  } = this.props;
        let caret = this.state.open ? CARETUP : CARET;
        let text = this.state.open ? "隐藏代码" : "查看代码";

        const header = (
            <div>
            {example}
            <Button style={{"marginTop": "10px"}} shape="block" onClick={ this.handleClick }>
        { caret }
        { text }
    </Button>
        </div>
    );
        return (
            <Col md={12} >
            <h3>{ title }</h3>
            <p>{ desc }</p>
            <Panel copyable collapsible headerContent expanded={ this.state.open } colors='bordered' header={ header } footerStyle = {{padding: 0}}>
    <pre><code className="hljs javascript">{ code }</code></pre>
        { !!scss_code ? <pre><code className="hljs css">{ scss_code }</code></pre> : null }
    </Panel>
        </Col>
    )
    }
}

class DemoGroup extends Component {
    constructor(props){
        super(props)
    }
    render () {
        return (
            <Row>
            {DemoArray.map((child,index) => {

                return (
                    <Demo example= {child.example} title= {child.title} code= {child.code} scss_code= {child.scss_code} desc= {child.desc} key= {index}/>
            )

            })}
    </Row>
    )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('tinperBeeDemo'));